package rules;

import sbnz.integracija.example.model.Patient;
import sbnz.integracija.example.model.Appointment;
import sbnz.integracija.example.model.Illness;
import sbnz.integracija.example.model.Symptom;
import sbnz.integracija.example.model.Diagnosis;

rule "Symptoms"
	agenda-group "check-symptoms"
	salience ((100*$value) / $symptoms.size())
    when
    	$a: Appointment(resolved == false, $diagnosisId: diagnosis.id, $presentSymptoms: appointmentSymptoms)
    	$d: Diagnosis(id == $diagnosisId, illness == null)
        $i: Illness($name: name, $symptoms: illnessSymptoms)
        Number($value: intValue >= 3) from accumulate(
        	Symptom($t:this, this memberOf $symptoms) from $presentSymptoms,
        	count($t)
        )
    then
    	System.out.println("Illness: " + $name);
    	System.out.println("Num of symptoms: " + $value + "/" + $symptoms.size());
    	System.out.println("///////////////////////////////////////////////////");
    	modify($d) { setIllness($i); }
end

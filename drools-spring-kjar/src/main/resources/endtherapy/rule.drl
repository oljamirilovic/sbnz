package endtherapy;

import java.lang.Math;
import java.util.List;
import java.time.LocalDate;

import sbnz.integracija.example.model.ChosenValues;
import sbnz.integracija.example.model.Patient;
import sbnz.integracija.example.model.Appointment;
import sbnz.integracija.example.model.Diagnosis;
import sbnz.integracija.example.model.Therapy;
import sbnz.integracija.example.model.JointMotionRange;
import sbnz.integracija.example.model.utils.DateUtil;


query therapyMinDaysPast(LocalDate startDate)
	eval(DateUtil.getDaysElapsed(startDate) >= 14)
end

rule "End current therapy and find a new one"
    when
        $c: ChosenValues($chosenTherapyId: chosenTherapyId, $newJmrScore: newJmrScore, patientRequested == false)
    	$t: Therapy(id == $chosenTherapyId, $diagnosisId: diagnosis.id, resolved == false, $startDate: startDate)
    	$a: Appointment( diagnosis.id == $diagnosisId)
    	$d: Diagnosis(id == $diagnosisId, $oldJMRscore : getScoreOfLastJmr(), $newJmrScore != $oldJMRscore )
        therapyMinDaysPast( $startDate;)
    then
        modify($t) { endTherapy() }
        modify($d) { addJMR(new JointMotionRange($newJmrScore, LocalDate.now(), $d)) }
        modify($a) { setResolved(false) }
        System.out.println("Therapy ended");
        System.out.println("Find new therapy");
        System.out.println("///////////////////////////////////////////////////");
end;

rule "End current therapy"
    when
        $c: ChosenValues($chosenTherapyId: chosenTherapyId, patientRequested == true)
    	$t: Therapy(id == $chosenTherapyId, resolved == false, $startDate: startDate)
        therapyMinDaysPast( $startDate; )
    then
        modify($t) { endTherapy() }
        System.out.println("Therapy ended");
        System.out.println("///////////////////////////////////////////////////");
end;

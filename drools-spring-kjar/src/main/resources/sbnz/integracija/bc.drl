
package sbnz.integracija;

import sbnz.integracija.example.model.Patient;
import sbnz.integracija.example.model.Family;
import sbnz.integracija.example.model.Illness;
import sbnz.integracija.example.model.Diagnosis;

global Patient patient;

query patientHadIllness(Long patientId, String illnessToCheck)
	Patient(id == patientId, $medicalHistory: medicalHistory)
	accumulate(
		Diagnosis($d: this, $i: illness) from $medicalHistory and
		Illness(this == illness, name == illnessToCheck),
        $illnesses: collectList($d)
	)
	eval($illnesses.size() > 0)
end;

query hasFamilyHistoryOfIllness(Patient child, Patient parent, Illness illness)
    ( Family(child, parent; ) and patientHadIllness(parent.getId(), illness.getName()) )
    or
    hasFamilyHistoryOfIllness( parent, z, illness; )
end;

/*rule "familyHistory"
when
    isContainedIn(thing, location; )
then
    System.out.println( "thing " + thing + " is in " + location );
end;*/
